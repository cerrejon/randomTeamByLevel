{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["cont","App","useState","isEditing","setIsEditing","editingStudent","setEditingStudent","id","name","level","team","dataSource","setDataSource","columns","key","title","dataIndex","render","record","EditOutlined","onClick","onEditStudent","resetEditing","className","pair","team_a","team_b","selections","i","length","a","slice","b","push","ShuffleTeamPair","players","sorted","sort","shift","score_a","score_b","high","low","FastAssignment","id1","id2","j","concat","PrintTeamPair","setTimeout","window","location","reload","alert","rowKey","rowClassName","index","pagination","visible","okText","onCancel","onOk","pre","map","student","value","onChange","e","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"qTAKIA,EAAO,EA0UIC,MAzUf,WAAgB,IAAD,EACqBC,oBAAS,GAD9B,mBACNC,EADM,KACKC,EADL,OAE+BF,mBAAS,MAFxC,mBAENG,EAFM,KAEUC,EAFV,OAGuBJ,mBAAS,CAC3C,CACEK,GAAI,EACJC,KAAM,QACNC,MAAO,GACPC,KAAM,IAER,CACEH,GAAI,EACJC,KAAM,aACNC,MAAO,GACPC,KAAM,IAER,CACEH,GAAI,EACJC,KAAM,eACNC,MAAO,GACPC,KAAM,IAER,CACEH,GAAI,EACJC,KAAM,cACNC,MAAO,GACPC,KAAM,IAER,CACEH,GAAI,EACJC,KAAM,SACNC,MAAO,GACPC,KAAM,IAER,CACEH,GAAI,EACJC,KAAM,WACNC,MAAO,GACPC,KAAM,IAER,CACEH,GAAI,EACJC,KAAM,YACNC,MAAO,GACPC,KAAM,IAER,CACEH,GAAI,EACJC,KAAM,OACNC,MAAO,GACPC,KAAM,IAER,CACEH,GAAI,EACJC,KAAM,UACNC,MAAO,GACPC,KAAM,IAER,CACEH,GAAI,GACJC,KAAM,8BACNC,MAAO,GACPC,KAAM,MA9DG,mBAGNC,EAHM,KAGMC,EAHN,KAiEPC,EAAU,CACd,CACEC,IAAK,IACLC,MAAO,KACPC,UAAW,MAEb,CACEF,IAAK,IACLC,MAAO,SACPC,UAAW,QAEb,CACEF,IAAK,IACLC,MAAO,QACPC,UAAW,SAEb,CACEF,IAAK,IACLC,MAAO,SACPE,OAAQ,SAACC,GACP,OACE,mCACE,cAACC,EAAA,EAAD,CACEC,QAAS,WACPC,EAAcH,WA8KtBG,EAAgB,SAACH,GACrBd,GAAa,GACbE,EAAkB,eAAKY,KAEnBI,EAAe,WACnBlB,GAAa,GACbE,EAAkB,OAEpB,OACE,qBAAKiB,UAAU,MAAf,SACE,8BACA,yBAAQA,UAAU,aAAlB,UACE,cAAC,IAAD,CAAQhB,GAAG,cAAca,QA9Gd,WACjB,GAAIpB,GAAQ,EAAG,CAMb,IALA,IAEIwB,EAfR,SAAyBA,GAGrB,IAH2B,IAAD,cACDA,EADC,GACnBC,EADmB,KACXC,EADW,KAEtBC,EAAa,GACRC,EAAI,EAAGA,EAAIH,EAAOI,OAAQD,IAAK,CACpC,IAAIE,EAAC,sBAAOL,EAAOM,MAAM,EAAGH,IAAvB,CAA2BF,EAAOE,IAAlC,YAAyCH,EAAOM,MAAMH,EAAE,KACzDI,EAAC,sBAAON,EAAOK,MAAM,EAAGH,IAAvB,CAA2BH,EAAOG,IAAlC,YAAyCF,EAAOK,MAAMH,EAAE,KAC7DD,EAAWM,KAAK,CAACH,EAAGE,IAExB,OAAOL,EAMUO,CArEnB,SAAwBC,GActB,IAZA,IAAMC,EAASD,EAAQE,MAAK,SAACP,EAAGE,GAAJ,OAAUA,EAAEvB,MAAQqB,EAAErB,SAG9CgB,EAAS,CAACW,EAAOE,SACjBZ,EAAS,CAACU,EAAOE,SAGjBC,EAAUd,EAAO,GAAGhB,MACpB+B,EAAUd,EAAO,GAAGjB,MAIjB2B,EAAOP,OAAS,GAAG,CACtB,IAAIC,EAAIM,EAAOE,QACXN,EAAII,EAAOE,QAEXG,OAAI,EAAEC,OAAG,EAGTZ,EAAErB,OAASuB,EAAEvB,OACbgC,EAAOX,EACPY,EAAMV,IAENS,EAAOT,EACPU,EAAMZ,GAKNS,GAAWC,GACXf,EAAOQ,KAAKS,GACZhB,EAAOO,KAAKQ,GACZF,GAAWG,EAAIjC,MACf+B,GAAWC,EAAKhC,QAEhBgB,EAAOQ,KAAKQ,GACZf,EAAOO,KAAKS,GACZH,GAAWE,EAAKhC,MAChB+B,GAAWE,EAAIjC,OAIvB,MAAO,CAACgB,EAAQC,GAwBEiB,CAAehC,IAEbX,GAChB4C,EAAM,EACNC,EAAM,EACFjB,EAAE,EAAIA,GAAG,EAAIA,IACnBJ,EAAK,GAAGI,GAAGrB,GAAKqC,EAChBA,IAEF,IAAI,IAAIE,EAAE,EAAIA,GAAG,EAAIA,IACnBtB,EAAK,GAAGsB,GAAGvC,GAAKsC,EAChBA,KA/BN,SAAuBrB,GAAO,IAAD,cACFA,EADE,GACpBC,EADoB,KACZC,EADY,KAE3Bd,GAAc,WACZ,OAAOa,EAAOsB,OAAOrB,MA8BrBsB,CAAcxB,GACdxB,SAEAiD,WAAWC,OAAOC,SAASC,QAAO,GAAQ,KAC1CC,MAAM,gCA2FF,2BACA,cAAC,IAAD,CACAC,OAAO,QACPC,aAAc,SAACrC,EAAQsC,GACrB,OAAOtC,EAAOX,IAAM,EAAI,QAAU,OAGpCkD,YAAY,EACZ5C,QAASA,EACTF,WAAYA,IAEZ,eAAC,IAAD,CACEI,MAAM,eACN2C,QAASvD,EACTwD,OAAO,OACPC,SAAU,WACRtC,KAEFuC,KAAM,WACJjD,GAAc,SAACkD,GACb,OAAOA,EAAIC,KAAI,SAACC,GACd,OAAIA,EAAQzD,KAAOF,EAAeE,GACzBF,EAEA2D,QAIb1C,KAjBJ,UAoBE,cAAC,IAAD,CACE2C,MAAK,OAAE5D,QAAF,IAAEA,OAAF,EAAEA,EAAgBG,KACvB0D,SAAU,SAACC,GACT7D,GAAkB,SAACwD,GACjB,OAAO,2BAAKA,GAAZ,IAAiBtD,KAAM2D,EAAEC,OAAOH,cAItC,cAAC,IAAD,CACEA,MAAK,OAAE5D,QAAF,IAAEA,OAAF,EAAEA,EAAgBI,MACvByD,SAAU,SAACC,GACT7D,GAAkB,SAACwD,GACjB,OAAO,2BAAKA,GAAZ,IAAiBrD,MAAO0D,EAAEC,OAAOH,yBCxTlCI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAS7D,OACP,cAAC,IAAM8D,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.821b786f.chunk.js","sourcesContent":["import \"antd/dist/antd.css\";\r\nimport \"./App.css\";\r\nimport { Button, Table, Modal, Input } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { EditOutlined } from \"@ant-design/icons\";\r\nlet cont = 0;\r\nfunction App() {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editingStudent, setEditingStudent] = useState(null);\r\n  const [dataSource, setDataSource] = useState([\r\n    {\r\n      id: 1,\r\n      name: \"Cerre\",\r\n      level: 20,\r\n      team: \"\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"El Carmona\",\r\n      level: 60,\r\n      team: \"\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Adriankelele\",\r\n      level: 50,\r\n      team: \"\",\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Machacasamu\",\r\n      level: 67,\r\n      team: \"\",\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Wondep\",\r\n      level: 75,\r\n      team: \"\",\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"Japicuco\",\r\n      level: 55,\r\n      team: \"\",\r\n    },\r\n    {\r\n      id: 7,\r\n      name: \"SuperDuck\",\r\n      level: 69,\r\n      team: \"\",\r\n    },\r\n    {\r\n      id: 8,\r\n      name: \"Fika\",\r\n      level: 86,\r\n      team: \"\",\r\n    },\r\n    {\r\n      id: 9,\r\n      name: \"Condiso\",\r\n      level: 55,\r\n      team: \"\",\r\n    },\r\n    {\r\n      id: 10,\r\n      name: \"Capitán Latinoamérica\",\r\n      level: 90,\r\n      team: \"\",\r\n    },\r\n  ]);\r\n  const columns = [\r\n    {\r\n      key: \"1\",\r\n      title: \"ID\",\r\n      dataIndex: \"id\",\r\n    },\r\n    {\r\n      key: \"2\",\r\n      title: \"Nombre\",\r\n      dataIndex: \"name\",\r\n    },\r\n    {\r\n      key: \"3\",\r\n      title: \"Nivel\",\r\n      dataIndex: \"level\",\r\n    },\r\n    {\r\n      key: \"5\",\r\n      title: \"Editar\",\r\n      render: (record) => {\r\n        return (\r\n          <>\r\n            <EditOutlined\r\n              onClick={() => {\r\n                onEditStudent(record);\r\n              }}\r\n            />\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n \r\n  function FastAssignment(players) {\r\n\r\n    const sorted = players.sort((a, b) => b.level - a.level);\r\n\r\n    // init with first two highest skilled players\r\n    let team_a = [sorted.shift()];\r\n    let team_b = [sorted.shift()];\r\n\r\n    // start tracking total skill for each team\r\n    let score_a = team_a[0].level;\r\n    let score_b = team_b[0].level;\r\n\r\n    // check them 2 at a time\r\n    // assumes array is always divisible by two\r\n    while (sorted.length > 0) {\r\n        let a = sorted.shift()\r\n        let b = sorted.shift()\r\n\r\n        let high, low;\r\n\r\n        // figure out which is higher / lower\r\n        if (a.level >= b.level) {\r\n            high = a;\r\n            low = b;\r\n        } else {\r\n            high = b;\r\n            low = a;\r\n        }\r\n\r\n        // check total score for team\r\n        // assign lower skilled player to higher scored team\r\n        if (score_a >= score_b) {\r\n            team_a.push(low)\r\n            team_b.push(high)\r\n            score_a += low.level\r\n            score_b += high.level\r\n        } else {\r\n            team_a.push(high)\r\n            team_b.push(low)\r\n            score_a += high.level\r\n            score_b += low.level\r\n        }\r\n    }\r\n\r\n    return [team_a, team_b]\r\n}\r\n\r\n\r\nfunction PrintTeamPair(pair) {\r\n  const [team_a, team_b] = pair;\r\n  setDataSource(() => {\r\n    return team_a.concat(team_b);\r\n  });\r\n}\r\n\r\nfunction ShuffleTeamPair(pair){\r\n    const [team_a, team_b] = pair;\r\n    let selections = [];\r\n    for (let i = 0; i < team_a.length; i++) {\r\n        let a = [...team_a.slice(0, i), team_b[i], ...team_a.slice(i+1)];\r\n        let b = [...team_b.slice(0, i), team_a[i], ...team_b.slice(i+1)];\r\n        selections.push([a, b])\r\n    }\r\n    return selections;\r\n}\r\n\r\nconst printTeams = () => {\r\n  if (cont <= 4) {\r\n    const two_teams = FastAssignment(dataSource);\r\n    const shuffled = ShuffleTeamPair(two_teams);\r\n    let pair = shuffled[cont];\r\n    let id1 = 1;\r\n    let id2 = 6;\r\n    for(let i=0 ; i<=4 ; i++){\r\n      pair[0][i].id = id1;\r\n      id1++;\r\n    }\r\n    for(let j=0 ; j<=4 ; j++){\r\n      pair[1][j].id = id2;\r\n      id2++;\r\n    }\r\n    PrintTeamPair(pair);\r\n    cont++;\r\n  } else {\r\n    setTimeout(window.location.reload(false), 5000);\r\n    alert(\"No hay más combinaciones\");\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n \r\n /////////////////////////////////\r\n /* const shuffle = (_xs) => {\r\n    const xs = [... _xs]\r\n    for (let i = xs .length; i --> 0; ) {\r\n      const j = Math .floor (Math .random () * i)\r\n      xs [i] = [xs [j], xs [j] = xs [i]] [0] // or any swap method\r\n    }\r\n    return xs\r\n  }\r\n\r\n  const sum = (ns) => ns.reduce((a, b) => a + b, 0);\r\n\r\n  const combinations = (xs, n) =>\r\n    xs.flatMap((x, i) =>\r\n      n === 1\r\n        ? [[x]]\r\n        : combinations(xs.slice(i + 1), n - 1).map((combo) => [x, ...combo])\r\n    );\r\n\r\n  const complement = (xs, ys) => xs.filter((x) => !ys.includes(x));\r\n\r\n  const splits = (fn, xs) =>\r\n    combinations(xs, Math.ceil(xs.length / 2))\r\n      .map((c) => [c, complement(xs, c)])\r\n      .reduce(\r\n        ({ all, uniq }, [a, b], _, __, ka = fn(a), kb = fn(b)) =>\r\n          uniq.has(ka) || uniq.has(kb)\r\n            ? { all, uniq }\r\n            : { all: all.concat([[a, b]]), uniq: uniq.add(ka).add(kb) },\r\n        { all: [], uniq: new Set() }\r\n      ).all;\r\n\r\n  // helper function\r\n  const skillTotal = (players) => sum(players.map((p) => p.level));\r\n\r\n  // main function\r\n  const nClosestSplits = (n, players, swap) => \r\n  {\r\n      return shuffle(\r\n        splits(xs => xs.map(x => x.name).join('~'), players).map(([a, b]) => ({\r\n          teamA: a,\r\n          teamB: b,\r\n          scoreDiff: Math.abs(skillTotal(a) - skillTotal(b))\r\n        }))\r\n      )\r\n        .sort(({ scoreDiff: a }, { scoreDiff: b }) => a - b)\r\n        .slice(0, n);\r\n    }\r\n\r\n  // demo\r\n  const randonTeams = () => {\r\n    let aTeams = nClosestSplits(5, dataSource);\r\n    for(let i in aTeams){\r\n    setDataSource(() => {\r\n      return aTeams[i].teamA.concat(aTeams[i].teamB) ;\r\n    \r\n    });\r\n  }\r\n\r\n  }\r\n \r\n/*\r\n  const onAddStudent = () => {\r\n    let a = dataSource.map((currElement, index) => {\r\n      var random = Math.floor(Math.random() * 5);\r\n      this.setState({ ...this.props.albums[random] });\r\n      return Object.values(dataSource[index])[2];\r\n    });\r\n    console.log(a);\r\n  };*/\r\n  \r\n  const onEditStudent = (record) => {\r\n    setIsEditing(true);\r\n    setEditingStudent({ ...record });\r\n  };\r\n  const resetEditing = () => {\r\n    setIsEditing(false);\r\n    setEditingStudent(null);\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n      <header className=\"App-header\">   \r\n        <Button id=\"buttonTeams\" onClick={printTeams}>Hacer equipos</Button>\r\n        <Table  \r\n        rowKey=\"index\" \r\n        rowClassName={(record, index) => {\r\n          return record.id <= 5 ? \"green\" : \"red\";\r\n        }}\r\n         \r\n        pagination={false} \r\n        columns={columns} \r\n        dataSource={dataSource}>\r\n        </Table>\r\n        <Modal\r\n          title=\"Editar nivel\"\r\n          visible={isEditing}\r\n          okText=\"Save\"\r\n          onCancel={() => {\r\n            resetEditing();\r\n          }}\r\n          onOk={() => {\r\n            setDataSource((pre) => {\r\n              return pre.map((student) => {\r\n                if (student.id === editingStudent.id) {\r\n                  return editingStudent;\r\n                } else {\r\n                  return student;\r\n                }\r\n              });\r\n            });\r\n            resetEditing();\r\n          }}\r\n        >\r\n          <Input\r\n            value={editingStudent?.name}\r\n            onChange={(e) => {\r\n              setEditingStudent((pre) => {\r\n                return { ...pre, name: e.target.value };\r\n              });\r\n            }}\r\n          />\r\n          <Input\r\n            value={editingStudent?.level}\r\n            onChange={(e) => {\r\n              setEditingStudent((pre) => {\r\n                return { ...pre, level: e.target.value };\r\n              });\r\n            }}\r\n          />\r\n        </Modal>\r\n      </header>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}